package DNSResolver;
import java.io.InputStream;
import java.io.OutputStream;


//This class should store all the data provided by the 12 byte DNS header. See the spec for all the fields needed.
//include getters, but NO setters
//test that you can read/decode the header before starting other classes
public class DNSHeader {

    /**
     * ead the header from an input stream (we'll use a ByteArrayInputStream but we will only use the basic read methods of input stream to read 1 byte, or to fill in a byte array, so we'll be generic).
     * @return
     */
    static DNSHeader decodeHeader(InputStream inStream){
        return null;
    }

    /**
     * This will create the header for the response. It will copy some fields from the request
     * @param request
     * @param response
     * @return
     */
    static DNSHeader buildHeaderForResponse(DNSMessage request, DNSMessage response){
        return null;
    }

    void writeBytes(OutputStream outStream){

    }

    /**
     *
     * @return humanly readable string version of a header object - reasonable implementation can be autogenerated from this IDE!
     */
    @Override
    public String toString(){
        return super.toString();
    }




}
